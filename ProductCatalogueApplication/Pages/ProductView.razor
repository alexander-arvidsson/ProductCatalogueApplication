@page "/products"
@using ProductCatalogueApplication.Data.Interfaces
@using ProductCatalogueApplication.Data
@inject IProductRepository productRepo

<h1>Display </h1>
<div class="row bg-light">
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Product ID</th>
                <th>Product Name</th>
                <th>Product Price</th>
                <th>Product Stock</th>
                <th>Product Description</th>
            </tr>
        </thead>
        <tbody>
            @if (displayProducts.Any())
            {
                @foreach (var b in displayProducts)
                {
                    <tr>

                        <td>@b.Id</td>
                        <td>@b.Name </td>
                        <td>@b.Price</td>
                        <td>@b.Stock</td>
                        <td>@b.Description</td>

                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div class="row bg-light">
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Product ID</th>
                <th>Product Name</th>
                <th>Product Price</th>
                <th>Product Stock</th>
                <th>Product Description</th>
            </tr>
        </thead>
        <tbody>
            @if (displayZeroStockProducts.Any())
            {
                @foreach (var b in displayZeroStockProducts)
                {
                    <tr>

                        <td>@b.Id</td>
                        <td>@b.Name </td>
                        <td>@b.Price</td>
                        <td>@b.Stock</td>
                        <td>@b.Description</td>

                    </tr>
                }
            }
        </tbody>
    </table>
</div>



@code{
    List<Product> displayProducts;
    List<Product> displayZeroStockProducts;

    protected override async Task OnInitializedAsync()
    {
        displayProducts = await productRepo.GetProductsAsync();
        displayZeroStockProducts = await productRepo.DisplayZeroStockAsync();
    }
}
